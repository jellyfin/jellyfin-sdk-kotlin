// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
package org.jellyfin.sdk.api.operations

import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.buildMap
import kotlin.collections.emptyMap
import org.jellyfin.sdk.api.client.ApiClient
import org.jellyfin.sdk.api.client.Response
import org.jellyfin.sdk.api.client.extensions.`get`
import org.jellyfin.sdk.api.client.extensions.post
import org.jellyfin.sdk.model.api.BackupManifestDto
import org.jellyfin.sdk.model.api.BackupOptionsDto
import org.jellyfin.sdk.model.api.BackupRestoreRequestDto

public class BackupApi(
	private val api: ApiClient,
) : Api {
	/**
	 * Creates a new Backup.
	 */
	public suspend fun createBackup(`data`: BackupOptionsDto? = null): Response<BackupManifestDto> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val response = api.post<BackupManifestDto>("/Backup/Create", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Gets the descriptor from an existing archive is present.
	 *
	 * @param path The data to start a restore process.
	 */
	public suspend fun getBackup(path: String): Response<BackupManifestDto> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = buildMap<String, Any?>(1) {
			put("path", path)
		}
		val data = null
		val response = api.`get`<BackupManifestDto>("/Backup/Manifest", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Gets a list of all currently present backups in the backup directory.
	 */
	public suspend fun listBackups(): Response<List<BackupManifestDto>> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.`get`<List<BackupManifestDto>>("/Backup", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Restores to a backup by restarting the server and applying the backup.
	 */
	public suspend fun startRestoreBackup(`data`: BackupRestoreRequestDto): Response<Unit> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val response = api.post<Unit>("/Backup/Restore", pathParameters, queryParameters, data)
		return response
	}
}
