// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
package org.jellyfin.sdk.model.api

import kotlin.Boolean
import kotlin.String
import kotlin.collections.List
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
public data class ClientCapabilities(
	@SerialName("PlayableMediaTypes")
	public val playableMediaTypes: List<String>? = null,
	@SerialName("SupportedCommands")
	public val supportedCommands: List<GeneralCommandType>? = null,
	@SerialName("SupportsMediaControl")
	public val supportsMediaControl: Boolean,
	@SerialName("SupportsContentUploading")
	public val supportsContentUploading: Boolean,
	@SerialName("MessageCallbackUrl")
	public val messageCallbackUrl: String? = null,
	@SerialName("SupportsPersistentIdentifier")
	public val supportsPersistentIdentifier: Boolean,
	@SerialName("SupportsSync")
	public val supportsSync: Boolean,
	/**
	 * A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata which determines which
	 * content a certain device is able to play.
	 *
	 *
	 * Specifically, it defines the supported containers
	 * (`P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles`) and
	 * codecs (`P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles`) (video and/or audio, including
	 * codec profiles and levels)
	 * the device is able to direct play (without transcoding or remuxing),
	 * as well as which containers/codecs to transcode to
	 * (`P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles`) in case it isn't.
	 */
	@SerialName("DeviceProfile")
	public val deviceProfile: DeviceProfile? = null,
	@SerialName("AppStoreUrl")
	public val appStoreUrl: String? = null,
	@SerialName("IconUrl")
	public val iconUrl: String? = null
)
