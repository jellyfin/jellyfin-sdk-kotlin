// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
package org.jellyfin.sdk.model.api

import kotlin.Boolean
import kotlin.Int
import kotlin.collections.List
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * Class TrickplayOptions.
 */
@Serializable
public data class TrickplayOptions(
	/**
	 * A value indicating whether or not to use HW acceleration.
	 */
	@SerialName("EnableHwAcceleration")
	public val enableHwAcceleration: Boolean,
	/**
	 * A value indicating whether or not to use HW accelerated MJPEG encoding.
	 */
	@SerialName("EnableHwEncoding")
	public val enableHwEncoding: Boolean,
	/**
	 * The behavior used by trickplay provider on library scan/update.
	 */
	@SerialName("ScanBehavior")
	public val scanBehavior: TrickplayScanBehavior,
	/**
	 * The process priority for the ffmpeg process.
	 */
	@SerialName("ProcessPriority")
	public val processPriority: ProcessPriorityClass,
	/**
	 * The interval, in ms, between each new trickplay image.
	 */
	@SerialName("Interval")
	public val interval: Int,
	/**
	 * The target width resolutions, in px, to generates preview images for.
	 */
	@SerialName("WidthResolutions")
	public val widthResolutions: List<Int>,
	/**
	 * Number of tile images to allow in X dimension.
	 */
	@SerialName("TileWidth")
	public val tileWidth: Int,
	/**
	 * Number of tile images to allow in Y dimension.
	 */
	@SerialName("TileHeight")
	public val tileHeight: Int,
	/**
	 * The ffmpeg output quality level.
	 */
	@SerialName("Qscale")
	public val qscale: Int,
	/**
	 * The jpeg quality to use for image tiles.
	 */
	@SerialName("JpegQuality")
	public val jpegQuality: Int,
	/**
	 * The number of threads to be used by ffmpeg.
	 */
	@SerialName("ProcessThreads")
	public val processThreads: Int,
)
