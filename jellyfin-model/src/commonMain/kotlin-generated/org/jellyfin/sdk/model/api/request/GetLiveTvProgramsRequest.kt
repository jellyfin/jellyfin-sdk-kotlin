// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
@file:UseSerializers(
	UUIDSerializer::class,
	DateTimeSerializer::class,
)

package org.jellyfin.sdk.model.api.request

import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.Collection
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.UseSerializers
import org.jellyfin.sdk.model.DateTime
import org.jellyfin.sdk.model.UUID
import org.jellyfin.sdk.model.api.ImageType
import org.jellyfin.sdk.model.api.ItemFields
import org.jellyfin.sdk.model.api.ItemSortBy
import org.jellyfin.sdk.model.api.SortOrder
import org.jellyfin.sdk.model.serializer.DateTimeSerializer
import org.jellyfin.sdk.model.serializer.UUIDSerializer

/**
 * Available live tv epgs.
 */
@Serializable
public data class GetLiveTvProgramsRequest(
	/**
	 * The channels to return guide information for.
	 */
	@SerialName("channelIds")
	public val channelIds: Collection<UUID>? = null,
	/**
	 * Optional. Filter by user id.
	 */
	@SerialName("userId")
	public val userId: UUID? = null,
	/**
	 * Optional. The minimum premiere start date.
	 */
	@SerialName("minStartDate")
	public val minStartDate: DateTime? = null,
	/**
	 * Optional. Filter by programs that have completed airing, or not.
	 */
	@SerialName("hasAired")
	public val hasAired: Boolean? = null,
	/**
	 * Optional. Filter by programs that are currently airing, or not.
	 */
	@SerialName("isAiring")
	public val isAiring: Boolean? = null,
	/**
	 * Optional. The maximum premiere start date.
	 */
	@SerialName("maxStartDate")
	public val maxStartDate: DateTime? = null,
	/**
	 * Optional. The minimum premiere end date.
	 */
	@SerialName("minEndDate")
	public val minEndDate: DateTime? = null,
	/**
	 * Optional. The maximum premiere end date.
	 */
	@SerialName("maxEndDate")
	public val maxEndDate: DateTime? = null,
	/**
	 * Optional. Filter for movies.
	 */
	@SerialName("isMovie")
	public val isMovie: Boolean? = null,
	/**
	 * Optional. Filter for series.
	 */
	@SerialName("isSeries")
	public val isSeries: Boolean? = null,
	/**
	 * Optional. Filter for news.
	 */
	@SerialName("isNews")
	public val isNews: Boolean? = null,
	/**
	 * Optional. Filter for kids.
	 */
	@SerialName("isKids")
	public val isKids: Boolean? = null,
	/**
	 * Optional. Filter for sports.
	 */
	@SerialName("isSports")
	public val isSports: Boolean? = null,
	/**
	 * Optional. The record index to start at. All items with a lower index will be dropped from the
	 * results.
	 */
	@SerialName("startIndex")
	public val startIndex: Int? = null,
	/**
	 * Optional. The maximum number of records to return.
	 */
	@SerialName("limit")
	public val limit: Int? = null,
	/**
	 * Optional. Specify one or more sort orders, comma delimited. Options: Name, StartDate.
	 */
	@SerialName("sortBy")
	public val sortBy: Collection<ItemSortBy>? = null,
	/**
	 * Sort Order - Ascending,Descending.
	 */
	@SerialName("sortOrder")
	public val sortOrder: Collection<SortOrder>? = null,
	/**
	 * The genres to return guide information for.
	 */
	@SerialName("genres")
	public val genres: Collection<String>? = null,
	/**
	 * The genre ids to return guide information for.
	 */
	@SerialName("genreIds")
	public val genreIds: Collection<UUID>? = null,
	/**
	 * Optional. Include image information in output.
	 */
	@SerialName("enableImages")
	public val enableImages: Boolean? = null,
	/**
	 * Optional. The max number of images to return, per image type.
	 */
	@SerialName("imageTypeLimit")
	public val imageTypeLimit: Int? = null,
	/**
	 * Optional. The image types to include in the output.
	 */
	@SerialName("enableImageTypes")
	public val enableImageTypes: Collection<ImageType>? = null,
	/**
	 * Optional. Include user data.
	 */
	@SerialName("enableUserData")
	public val enableUserData: Boolean? = null,
	/**
	 * Optional. Filter by series timer id.
	 */
	@SerialName("seriesTimerId")
	public val seriesTimerId: String? = null,
	/**
	 * Optional. Filter by library series id.
	 */
	@SerialName("librarySeriesId")
	public val librarySeriesId: UUID? = null,
	/**
	 * Optional. Specify additional fields of information to return in the output.
	 */
	@SerialName("fields")
	public val fields: Collection<ItemFields>? = null,
	/**
	 * Retrieve total record count.
	 */
	@SerialName("enableTotalRecordCount")
	public val enableTotalRecordCount: Boolean? = true,
)
