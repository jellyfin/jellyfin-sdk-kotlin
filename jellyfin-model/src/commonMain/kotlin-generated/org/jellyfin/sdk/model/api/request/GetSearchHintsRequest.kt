// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
@file:UseSerializers(UUIDSerializer::class)

package org.jellyfin.sdk.model.api.request

import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.Collection
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.UseSerializers
import org.jellyfin.sdk.model.UUID
import org.jellyfin.sdk.model.api.BaseItemKind
import org.jellyfin.sdk.model.api.MediaType
import org.jellyfin.sdk.model.serializer.UUIDSerializer

/**
 * The search hint result.
 */
@Serializable
public data class GetSearchHintsRequest(
	/**
	 * Optional. The record index to start at. All items with a lower index will be dropped from the
	 * results.
	 */
	@SerialName("startIndex")
	public val startIndex: Int? = null,
	/**
	 * Optional. The maximum number of records to return.
	 */
	@SerialName("limit")
	public val limit: Int? = null,
	/**
	 * Optional. Supply a user id to search within a user's library or omit to search all.
	 */
	@SerialName("userId")
	public val userId: UUID? = null,
	/**
	 * The search term to filter on.
	 */
	@SerialName("searchTerm")
	public val searchTerm: String,
	/**
	 * If specified, only results with the specified item types are returned. This allows multiple,
	 * comma delimited.
	 */
	@SerialName("includeItemTypes")
	public val includeItemTypes: Collection<BaseItemKind>? = null,
	/**
	 * If specified, results with these item types are filtered out. This allows multiple, comma
	 * delimited.
	 */
	@SerialName("excludeItemTypes")
	public val excludeItemTypes: Collection<BaseItemKind>? = null,
	/**
	 * If specified, only results with the specified media types are returned. This allows multiple,
	 * comma delimited.
	 */
	@SerialName("mediaTypes")
	public val mediaTypes: Collection<MediaType>? = null,
	/**
	 * If specified, only children of the parent are returned.
	 */
	@SerialName("parentId")
	public val parentId: UUID? = null,
	/**
	 * Optional filter for movies.
	 */
	@SerialName("isMovie")
	public val isMovie: Boolean? = null,
	/**
	 * Optional filter for series.
	 */
	@SerialName("isSeries")
	public val isSeries: Boolean? = null,
	/**
	 * Optional filter for news.
	 */
	@SerialName("isNews")
	public val isNews: Boolean? = null,
	/**
	 * Optional filter for kids.
	 */
	@SerialName("isKids")
	public val isKids: Boolean? = null,
	/**
	 * Optional filter for sports.
	 */
	@SerialName("isSports")
	public val isSports: Boolean? = null,
	/**
	 * Optional filter whether to include people.
	 */
	@SerialName("includePeople")
	public val includePeople: Boolean? = true,
	/**
	 * Optional filter whether to include media.
	 */
	@SerialName("includeMedia")
	public val includeMedia: Boolean? = true,
	/**
	 * Optional filter whether to include genres.
	 */
	@SerialName("includeGenres")
	public val includeGenres: Boolean? = true,
	/**
	 * Optional filter whether to include studios.
	 */
	@SerialName("includeStudios")
	public val includeStudios: Boolean? = true,
	/**
	 * Optional filter whether to include artists.
	 */
	@SerialName("includeArtists")
	public val includeArtists: Boolean? = true,
)
