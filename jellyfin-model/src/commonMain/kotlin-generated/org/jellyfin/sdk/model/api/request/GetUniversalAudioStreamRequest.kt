// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
@file:UseSerializers(UUIDSerializer::class)

package org.jellyfin.sdk.model.api.request

import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.collections.Collection
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.UseSerializers
import org.jellyfin.sdk.model.UUID
import org.jellyfin.sdk.model.api.MediaStreamProtocol
import org.jellyfin.sdk.model.serializer.UUIDSerializer

/**
 * An audio stream.
 */
@Serializable
public data class GetUniversalAudioStreamRequest(
	/**
	 * The item id.
	 */
	@SerialName("itemId")
	public val itemId: UUID,
	/**
	 * Optional. The audio container.
	 */
	@SerialName("container")
	public val container: Collection<String>? = null,
	/**
	 * The media version id, if playing an alternate version.
	 */
	@SerialName("mediaSourceId")
	public val mediaSourceId: String? = null,
	/**
	 * The device id of the client requesting. Used to stop encoding processes when needed.
	 */
	@SerialName("deviceId")
	public val deviceId: String? = null,
	/**
	 * Optional. The user id.
	 */
	@SerialName("userId")
	public val userId: UUID? = null,
	/**
	 * Optional. The audio codec to transcode to.
	 */
	@SerialName("audioCodec")
	public val audioCodec: String? = null,
	/**
	 * Optional. The maximum number of audio channels.
	 */
	@SerialName("maxAudioChannels")
	public val maxAudioChannels: Int? = null,
	/**
	 * Optional. The number of how many audio channels to transcode to.
	 */
	@SerialName("transcodingAudioChannels")
	public val transcodingAudioChannels: Int? = null,
	/**
	 * Optional. The maximum streaming bitrate.
	 */
	@SerialName("maxStreamingBitrate")
	public val maxStreamingBitrate: Int? = null,
	/**
	 * Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to
	 * encoder defaults.
	 */
	@SerialName("audioBitRate")
	public val audioBitRate: Int? = null,
	/**
	 * Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.
	 */
	@SerialName("startTimeTicks")
	public val startTimeTicks: Long? = null,
	/**
	 * Optional. The container to transcode to.
	 */
	@SerialName("transcodingContainer")
	public val transcodingContainer: String? = null,
	/**
	 * Optional. The transcoding protocol.
	 */
	@SerialName("transcodingProtocol")
	public val transcodingProtocol: MediaStreamProtocol? = null,
	/**
	 * Optional. The maximum audio sample rate.
	 */
	@SerialName("maxAudioSampleRate")
	public val maxAudioSampleRate: Int? = null,
	/**
	 * Optional. The maximum audio bit depth.
	 */
	@SerialName("maxAudioBitDepth")
	public val maxAudioBitDepth: Int? = null,
	/**
	 * Optional. Whether to enable remote media.
	 */
	@SerialName("enableRemoteMedia")
	public val enableRemoteMedia: Boolean? = null,
	/**
	 * Optional. Whether to break on non key frames.
	 */
	@SerialName("breakOnNonKeyFrames")
	public val breakOnNonKeyFrames: Boolean? = false,
	/**
	 * Whether to enable redirection. Defaults to true.
	 */
	@SerialName("enableRedirection")
	public val enableRedirection: Boolean? = true,
)
